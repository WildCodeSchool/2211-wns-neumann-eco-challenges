services:
  db-prod:
    restart: always
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=${DB_PASS:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-postgres}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-prod:/var/lib/postgresql/data
  server-prod:
    restart: always
    depends_on:
      db-prod:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=db-prod
      - DB_USER=${DB_USER:-postgres}
      - DB_PASS=${DB_PASS:-postgres}
      - DB_NAME=${DB_NAME:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - SERVER_HOST=${SERVER_HOST:-localhost}
      - SERVER_PORT=${SERVER_PORT:-4000}
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:8000}
    image: bdeliencourt/greenmates-server:prod
    healthcheck:
      test: "curl --fail --request GET -H 'content-type:application/json' --url 'http://server-prod:4000/graphql?query=%7B__typename%7D'"
      interval: 5s
      timeout: 5s
      retries: 10
  client-prod:
    restart: always
    platform: linux/amd64
    image: bdeliencourt/greenmates-client:prod
  nginx-prod:
    image: nginx:1.21.3
    depends_on:
      server-prod:
        condition: service_healthy
      client-prod:
        condition: service_started
    restart: always
    ports:
      - ${GATEWAY_PORT:-8000}:80
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx
volumes:
  db-prod:
